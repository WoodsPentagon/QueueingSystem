<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAErDi/9Kw4v/SsOL/0rD
        i/9Kw4v/SsOL/0q6hP9Ng1//T1tE/09PPP9PTzz/TltE/0yEYP9KuYX/SsOL/0rDi/9Kw4v/SsOL/0rD
        i/9Kw4v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASsOL/0rD
        i/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABKw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsKK/0uYbv9Nd1f/TXdY/0yYbf9Kwor/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAErDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0q/iP9Oak7/UUk4/2xlVv9sZVb/UUk4/05o
        Tf9LwIn/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAASsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/TIBe/1dPP/+/urD/3NjP/9zY
        z/++ua//VU4+/02GYv9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9PVD//lI2B/9LN
        w/90bFj/dWtY/9LNxP+Si3//TlVB/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAErDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/09K
        Of+moJT/u7aq/2RaRf9kWkX/vLaq/6WflP9PSzn/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASsOL/0rDi/9Kw4v/SsOL/0rD
        i/9Kw4v/Tl5H/4B5a//b1s3/nZaG/52Vhv/a1s7/fndq/09fR/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rD
        i/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKw4v/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/9Mm3D/T0c3/5KLf//Kxbv/ysW7/5GLfv9PRzf/S5xw/0rDi/9Kw4v/SsOL/0rD
        i/9Kw4v/SsOL/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEvD
        i/9JtXv/SbZ7/0rDi/9Kw4v/SsOL/0rDi/9Mk2v/T007/09HN/9PRzf/T0w7/0yQaP9Kw4v/SsOL/0rD
        i/9Kw4v/SbV7/0m2e/9MxIv/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZseS9kWGQ/9Fh0T/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Ku4X/S6N2/0ujdv9LvIb/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/9FhkP/RYdE/2fHkvYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACXzqBuVcWP/krDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rD
        i/9Kw4v/SsOL/0rDi/9Kw4v/SsOL/0rDi/9VxY7+mc+gawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACeyp4dlc2gdpHNnI6RzZyOkc2cjpHNnI6RzZyOkc2cjpHN
        nI6RzZyOkc2cjpHNnI6RzZyOkc2cjpHNnI6RzZyOlc2gdqHQoRsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////4AAH/8AAA//AAAP/wAAD/8AAA//AAAP/wA
        AD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wA
        AD/8AAA//AAAP/wAAD/+AAB//4AB////////////
</value>
  </data>
</root>